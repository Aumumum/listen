{"version":3,"file":"state.js","sourceRoot":"","sources":["../../../src/interfaces/state.ts"],"names":[],"mappings":"","sourcesContent":["import { Direction } from '../inputs/index';\r\nimport { WorkflowCycleModel } from '../classes/state/cycle';\r\nimport { FetchModel } from '../classes/state/fetch';\r\nimport { ClipModel } from '../classes/state/clip';\r\nimport { RenderModel } from '../classes/state/render';\r\nimport { IPackages } from './adapter';\r\n\r\nexport interface ScrollEventData {\r\n  time: number;\r\n  position: number;\r\n  direction: Direction | null;\r\n}\r\n\r\nexport interface ScrollState {\r\n  previous: ScrollEventData | null;\r\n  current: ScrollEventData | null;\r\n\r\n  scrollTimer: ReturnType<typeof setTimeout> | null;\r\n\r\n  syntheticPosition: number | null;\r\n  syntheticFulfill: boolean;\r\n  animationFrameId: number;\r\n  positionBeforeAsync: number | null;\r\n  positionBeforeAdjust: number | null;\r\n  positionAfterAdjust: number | null;\r\n\r\n  reset: () => void;\r\n  cleanupTimers: () => void;\r\n  hasPositionChanged: (position: number) => boolean;\r\n}\r\n\r\nexport interface State {\r\n  packageInfo: IPackages;\r\n  initTime: number;\r\n  cycle: WorkflowCycleModel;\r\n  fetch: FetchModel;\r\n  clip: ClipModel;\r\n  render: RenderModel;\r\n  scrollState: ScrollState;\r\n  time: number;\r\n}\r\n"]}