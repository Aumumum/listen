export class ScrollState {
  constructor() {
    this.reset();
  }
  reset() {
    this.previous = null;
    this.current = null;
    this.syntheticPosition = null;
    this.syntheticFulfill = false;
    this.positionBeforeAsync = null;
    this.positionBeforeAdjust = null;
    this.positionAfterAdjust = null;
    this.cleanupTimers();
  }
  cleanupTimers() {
    if (this.scrollTimer) {
      clearTimeout(this.scrollTimer);
      this.scrollTimer = null;
    }
    if (this.animationFrameId) {
      cancelAnimationFrame(this.animationFrameId);
      this.animationFrameId = 0;
    }
  }
  hasPositionChanged(position) {
    const before = this.positionBeforeAdjust;
    const after = this.positionAfterAdjust;
    return before === null || before !== position || after === null || after !== position;
  }
}
//# sourceMappingURL=scroll.js.map