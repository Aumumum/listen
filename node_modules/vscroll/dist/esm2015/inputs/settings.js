import { VALIDATORS } from './validation';
import { SizeStrategy } from './common';
const { NUMBER, INTEGER, INTEGER_UNLIMITED, MORE_OR_EQUAL, BOOLEAN, ELEMENT, FUNC, OR, ENUM } = VALIDATORS;
var Settings;
(function (Settings) {
  Settings["adapter"] = "adapter";
  Settings["startIndex"] = "startIndex";
  Settings["minIndex"] = "minIndex";
  Settings["maxIndex"] = "maxIndex";
  Settings["itemSize"] = "itemSize";
  Settings["bufferSize"] = "bufferSize";
  Settings["padding"] = "padding";
  Settings["infinite"] = "infinite";
  Settings["horizontal"] = "horizontal";
  Settings["windowViewport"] = "windowViewport";
  Settings["viewportElement"] = "viewportElement";
  Settings["inverse"] = "inverse";
  Settings["onBeforeClip"] = "onBeforeClip";
  Settings["sizeStrategy"] = "sizeStrategy";
})(Settings || (Settings = {}));
var DevSettings;
(function (DevSettings) {
  DevSettings["debug"] = "debug";
  DevSettings["immediateLog"] = "immediateLog";
  DevSettings["logProcessRun"] = "logProcessRun";
  DevSettings["logTime"] = "logTime";
  DevSettings["throttle"] = "throttle";
  DevSettings["initDelay"] = "initDelay";
  DevSettings["initWindowDelay"] = "initWindowDelay";
  DevSettings["cacheData"] = "cacheData";
  DevSettings["cacheOnReload"] = "cacheOnReload";
  DevSettings["changeOverflow"] = "changeOverflow";
  DevSettings["dismissOverflowAnchor"] = "dismissOverflowAnchor";
})(DevSettings || (DevSettings = {}));
export const MIN = {
  [Settings.itemSize]: 1,
  [Settings.bufferSize]: 1,
  [Settings.padding]: 0.01,
  [DevSettings.throttle]: 0,
  [DevSettings.initDelay]: 0,
  [DevSettings.initWindowDelay]: 0,
};
export const SETTINGS = {
  [Settings.adapter]: {
    validators: [BOOLEAN],
    defaultValue: false
  },
  [Settings.startIndex]: {
    validators: [INTEGER],
    defaultValue: 1
  },
  [Settings.minIndex]: {
    validators: [INTEGER_UNLIMITED],
    defaultValue: -Infinity
  },
  [Settings.maxIndex]: {
    validators: [INTEGER_UNLIMITED],
    defaultValue: Infinity
  },
  [Settings.itemSize]: {
    validators: [INTEGER, MORE_OR_EQUAL(MIN[Settings.itemSize], true)],
    defaultValue: NaN
  },
  [Settings.bufferSize]: {
    validators: [INTEGER, MORE_OR_EQUAL(MIN[Settings.bufferSize], true)],
    defaultValue: 5
  },
  [Settings.padding]: {
    validators: [NUMBER, MORE_OR_EQUAL(MIN[Settings.padding], true)],
    defaultValue: 0.5
  },
  [Settings.infinite]: {
    validators: [BOOLEAN],
    defaultValue: false
  },
  [Settings.horizontal]: {
    validators: [BOOLEAN],
    defaultValue: false
  },
  [Settings.windowViewport]: {
    validators: [BOOLEAN],
    defaultValue: false
  },
  [Settings.viewportElement]: {
    validators: [OR([ELEMENT, FUNC])],
    defaultValue: null
  },
  [Settings.inverse]: {
    validators: [BOOLEAN],
    defaultValue: false
  },
  [Settings.onBeforeClip]: {
    validators: [FUNC],
    defaultValue: null
  },
  [Settings.sizeStrategy]: {
    validators: [ENUM(SizeStrategy)],
    defaultValue: SizeStrategy.Average
  },
};
export const DEV_SETTINGS = {
  [DevSettings.debug]: {
    validators: [BOOLEAN],
    defaultValue: false
  },
  [DevSettings.immediateLog]: {
    validators: [BOOLEAN],
    defaultValue: true
  },
  [DevSettings.logProcessRun]: {
    validators: [BOOLEAN],
    defaultValue: false
  },
  [DevSettings.logTime]: {
    validators: [BOOLEAN],
    defaultValue: false
  },
  [DevSettings.throttle]: {
    validators: [INTEGER, MORE_OR_EQUAL(MIN[DevSettings.throttle], true)],
    defaultValue: 40
  },
  [DevSettings.initDelay]: {
    validators: [INTEGER, MORE_OR_EQUAL(MIN[DevSettings.initDelay], true)],
    defaultValue: 1
  },
  [DevSettings.initWindowDelay]: {
    validators: [INTEGER, MORE_OR_EQUAL(MIN[DevSettings.initWindowDelay], true)],
    defaultValue: 40
  },
  [DevSettings.cacheData]: {
    validators: [BOOLEAN],
    defaultValue: false
  },
  [DevSettings.cacheOnReload]: {
    validators: [BOOLEAN],
    defaultValue: false
  },
  [DevSettings.changeOverflow]: {
    validators: [BOOLEAN],
    defaultValue: false
  },
  [DevSettings.dismissOverflowAnchor]: {
    validators: [BOOLEAN],
    defaultValue: true
  },
};
//# sourceMappingURL=settings.js.map