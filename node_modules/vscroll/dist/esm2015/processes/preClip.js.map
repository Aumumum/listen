{"version":3,"file":"preClip.js","sourceRoot":"","sources":["../../../src/processes/preClip.ts"],"names":[],"mappings":"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","sourcesContent":["import { BaseProcessFactory, CommonProcess, ProcessStatus } from './misc/index';\nimport { Scroller } from '../scroller';\nimport { Direction } from '../inputs/index';\n\nexport default class PreClip extends BaseProcessFactory(CommonProcess.preClip) {\n\n  static run(scroller: Scroller): void {\n    PreClip.prepareClip(scroller);\n\n    scroller.workflow.call({\n      process: PreClip.process,\n      status: ProcessStatus.next,\n      payload: {\n        doClip: scroller.state.clip.doClip\n      }\n    });\n  }\n\n  static prepareClip(scroller: Scroller): void {\n    const { state: { fetch, clip } } = scroller;\n    if (PreClip.shouldNotClip(scroller)) {\n      return;\n    }\n    const firstIndex = fetch.first.indexBuffer;\n    const lastIndex = fetch.last.indexBuffer;\n    scroller.logger.log(() =>\n      `looking for ${fetch.direction ? 'anti-' + fetch.direction + ' ' : ''}items ` +\n      `that are out of [${firstIndex}..${lastIndex}] range`);\n    if (PreClip.isBackward(scroller, firstIndex)) {\n      PreClip.prepareClipByDirection(scroller, Direction.backward, firstIndex);\n    }\n    if (PreClip.isForward(scroller, lastIndex)) {\n      PreClip.prepareClipByDirection(scroller, Direction.forward, lastIndex);\n    }\n    if (!clip.doClip) {\n      scroller.logger.log('skipping clip [no items to clip]');\n    }\n    return;\n  }\n\n  static shouldNotClip(scroller: Scroller): boolean {\n    const { settings, buffer, state } = scroller;\n    if (settings.infinite && !state.clip.force) {\n      scroller.logger.log('skipping clip [infinite mode]');\n      return true;\n    }\n    if (!buffer.size) {\n      scroller.logger.log('skipping clip [empty buffer]');\n      return true;\n    }\n    if (state.cycle.isInitial) {\n      scroller.logger.log('skipping clip [initial cycle]');\n      return true;\n    }\n    return false;\n  }\n\n  static isBackward(scroller: Scroller, firstIndex: number): boolean {\n    const { buffer, state: { clip, fetch } } = scroller;\n    if (clip.force) {\n      return clip.forceBackward;\n    }\n    if (fetch.direction !== Direction.backward) {\n      if (firstIndex - 1 >= buffer.absMinIndex) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static isForward(scroller: Scroller, lastIndex: number): boolean {\n    const { buffer, state: { clip, fetch } } = scroller;\n    if (clip.force) {\n      return clip.forceForward;\n    }\n    if (fetch.direction !== Direction.forward) {\n      if (lastIndex + 1 <= buffer.absMaxIndex) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static prepareClipByDirection(scroller: Scroller, direction: Direction, edgeIndex: number): void {\n    const forward = direction === Direction.forward;\n    scroller.buffer.items.forEach(item => {\n      if (\n        (!forward && item.$index < edgeIndex) ||\n        (forward && item.$index > edgeIndex)\n      ) {\n        item.toRemove = true;\n        item.removeDirection = direction;\n        scroller.state.clip.doClip = true;\n      }\n    });\n  }\n\n}\n"]}