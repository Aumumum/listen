{"version":3,"file":"scroll.js","sourceRoot":"","sources":["../../../src/processes/scroll.ts"],"names":[],"mappings":"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","sourcesContent":["import { BaseProcessFactory, CommonProcess, ProcessStatus } from './misc/index';\nimport { Scroller } from '../scroller';\nimport { Direction } from '../inputs/index';\nimport { ScrollEventData, ScrollerWorkflow } from '../interfaces/index';\n\nexport default class Scroll extends BaseProcessFactory(CommonProcess.scroll) {\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static run(scroller: Scroller, payload?: { event?: Event }): void {\n    const { workflow, viewport } = scroller;\n    const position = viewport.scrollPosition;\n\n    if (Scroll.onSynthetic(scroller, position)) {\n      return;\n    }\n\n    Scroll.onThrottle(scroller, position, () =>\n      Scroll.onScroll(scroller, workflow)\n    );\n  }\n\n  static onSynthetic(scroller: Scroller, position: number): boolean {\n    const { scrollState } = scroller.state;\n    const synthPos = scrollState.syntheticPosition;\n    if (synthPos !== null) {\n      if (scrollState.syntheticFulfill) {\n        scrollState.syntheticPosition = null;\n      }\n      if (!scrollState.syntheticFulfill || synthPos === position) {\n        scroller.logger.log(() => [\n          'skipping scroll', position, `[${scrollState.syntheticFulfill ? '' : 'pre-'}synthetic]`\n        ]);\n        return true;\n      }\n      scroller.logger.log(() => [\n        'synthetic scroll has been fulfilled:', position, position < synthPos ? '<' : '>', synthPos\n      ]);\n    }\n    return false;\n  }\n\n  static onThrottle(scroller: Scroller, position: number, done: () => void): void {\n    const { state: { scrollState }, settings: { throttle }, logger } = scroller;\n    scrollState.current = Scroll.getScrollEvent(position, scrollState.previous);\n    const { direction, time } = scrollState.current;\n    const timeDiff = scrollState.previous ? time - scrollState.previous.time : Infinity;\n    const delta = throttle - timeDiff;\n    const shouldDelay = isFinite(delta) && delta > 0;\n    const alreadyDelayed = !!scrollState.scrollTimer;\n    logger.log(() => [\n      direction === Direction.backward ? '\\u2934' : '\\u2935',\n      position,\n      shouldDelay ? (timeDiff + 'ms') : '0ms',\n      shouldDelay ? (alreadyDelayed ? 'delayed' : `/ ${delta}ms delay`) : ''\n    ]);\n    if (!shouldDelay) {\n      if (scrollState.scrollTimer) {\n        clearTimeout(scrollState.scrollTimer);\n        scrollState.scrollTimer = null;\n      }\n      done();\n      return;\n    }\n    if (!alreadyDelayed) {\n      scrollState.scrollTimer = setTimeout(() => {\n        logger.log(() => {\n          const curr = Scroll.getScrollEvent(scroller.viewport.scrollPosition, scrollState.current);\n          return [\n            curr.direction === Direction.backward ? '\\u2934' : '\\u2935',\n            curr.position,\n            (curr.time - time) + 'ms',\n            'triggered by timer set on',\n            position\n          ];\n        });\n        scrollState.scrollTimer = null;\n        done();\n      }, delta);\n    }\n  }\n\n  static getScrollEvent(position: number, previous: ScrollEventData | null): ScrollEventData {\n    const time = Number(new Date());\n    let direction: Direction | null = Direction.forward;\n    if (previous) {\n      if (position === previous.position) {\n        direction = previous.direction;\n      } else if (position < previous.position) {\n        direction = Direction.backward;\n      }\n    }\n    return { position, direction, time };\n  }\n\n  static onScroll(scroller: Scroller, workflow: ScrollerWorkflow): void {\n    const { state: { scrollState, cycle } } = scroller;\n    scrollState.previous = { ...(scrollState.current as ScrollEventData) };\n    scrollState.current = null;\n\n    if (cycle.busy.get()) {\n      scroller.logger.log(() => ['skipping scroll', (scrollState.previous as ScrollEventData).position, '[pending]']);\n      return;\n    }\n\n    workflow.call({\n      process: Scroll.process,\n      status: ProcessStatus.next\n    });\n  }\n\n}\n"]}