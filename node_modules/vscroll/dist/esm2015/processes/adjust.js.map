{"version":3,"file":"adjust.js","sourceRoot":"","sources":["../../../src/processes/adjust.ts"],"names":[],"mappings":"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","sourcesContent":["import { BaseProcessFactory, CommonProcess, ProcessStatus } from './misc/index';\r\nimport { Scroller } from '../scroller';\r\n\r\nexport default class Adjust extends BaseProcessFactory(CommonProcess.adjust) {\r\n\r\n  static run(scroller: Scroller): void {\r\n    const { workflow, viewport, state: { scrollState } } = scroller;\r\n\r\n    scrollState.positionBeforeAdjust = viewport.scrollPosition;\r\n    Adjust.setPaddings(scroller);\r\n    scrollState.positionAfterAdjust = viewport.scrollPosition;\r\n\r\n    // scroll position adjustments\r\n    const position = Adjust.calculatePosition(scroller);\r\n\r\n    // set new position using animation frame\r\n    Adjust.setPosition(scroller, position, () =>\r\n      workflow.call({\r\n        process: Adjust.process,\r\n        status: ProcessStatus.done\r\n      })\r\n    );\r\n  }\r\n\r\n  static setPaddings(scroller: Scroller): void {\r\n    const { viewport, buffer, settings: { inverse }, state: { fetch } } = scroller;\r\n    const firstItem = buffer.getFirstVisibleItem();\r\n    const lastItem = buffer.getLastVisibleItem();\r\n    let first, last;\r\n    if (firstItem && lastItem) {\r\n      first = firstItem.$index;\r\n      last = lastItem.$index;\r\n    } else {\r\n      first = !isNaN(fetch.firstVisibleIndex) ? fetch.firstVisibleIndex : buffer.startIndex;\r\n      last = first - 1;\r\n    }\r\n    const { forward, backward } = viewport.paddings;\r\n    let index, bwdSize = 0, fwdSize = 0;\r\n\r\n    // new backward and forward paddings size\r\n    for (index = buffer.finiteAbsMinIndex; index < first; index++) {\r\n      bwdSize += buffer.getSizeByIndex(index);\r\n    }\r\n    for (index = last + 1; index <= buffer.finiteAbsMaxIndex; index++) {\r\n      fwdSize += buffer.getSizeByIndex(index);\r\n    }\r\n\r\n    // lack of items case\r\n    const bufferSize = viewport.getScrollableSize() - forward.size - backward.size;\r\n    const viewportSizeDiff = viewport.getSize() - (bwdSize + bufferSize + fwdSize);\r\n    if (viewportSizeDiff > 0) {\r\n      if (inverse) {\r\n        bwdSize += viewportSizeDiff;\r\n      } else {\r\n        fwdSize += viewportSizeDiff;\r\n      }\r\n      scroller.logger.log(() =>\r\n        inverse ? 'backward' : 'forward' + ` padding will be increased by ${viewportSizeDiff} to fill the viewport`\r\n      );\r\n    }\r\n\r\n    backward.size = bwdSize;\r\n    forward.size = fwdSize;\r\n\r\n    scroller.logger.stat('after paddings adjustments');\r\n  }\r\n\r\n  static calculatePosition(scroller: Scroller): number {\r\n    const { viewport, buffer, state } = scroller;\r\n    const { fetch, render, scrollState } = state;\r\n    let position = viewport.paddings.backward.size;\r\n\r\n    // backward outlet increase\r\n    if (!isNaN(fetch.firstVisibleIndex) && !isNaN(buffer.firstIndex)) {\r\n      for (let i = buffer.firstIndex; i < fetch.firstVisibleIndex; i++) {\r\n        position += buffer.getSizeByIndex(i);\r\n      }\r\n      if (fetch.firstVisibleItemDelta) {\r\n        position -= fetch.firstVisibleItemDelta;\r\n      }\r\n    } else {\r\n      if (fetch.isPrepend && fetch.negativeSize) {\r\n        position += fetch.negativeSize;\r\n      }\r\n    }\r\n\r\n    // change per slow fetch/render\r\n    if (scrollState.positionBeforeAsync !== null) {\r\n      const diff = render.positionBefore - scrollState.positionBeforeAsync;\r\n      if (diff !== 0) {\r\n        scroller.logger.log(`shift position due to fetch-render difference (${diff})`);\r\n        position += diff;\r\n      }\r\n    }\r\n\r\n    // offset increase\r\n    if (viewport.offset > 0 && (position || fetch.positions.before)) {\r\n      position += viewport.offset;\r\n    }\r\n\r\n    return Math.round(position);\r\n  }\r\n\r\n  static setPosition(scroller: Scroller, position: number, done: () => void): void {\r\n    const { state: { scrollState }, viewport } = scroller;\r\n    if (!scrollState.hasPositionChanged(position)) {\r\n      return done();\r\n    }\r\n    scrollState.syntheticPosition = position;\r\n    scrollState.syntheticFulfill = false;\r\n\r\n    scrollState.animationFrameId = requestAnimationFrame(() => {\r\n      const inertiaDiff = (scrollState.positionAfterAdjust as number) - viewport.scrollPosition;\r\n      let diffLog = '';\r\n      if (inertiaDiff > 0) {\r\n        position -= inertiaDiff;\r\n        scrollState.syntheticPosition = position;\r\n        diffLog = ` (-${inertiaDiff})`;\r\n      }\r\n      scrollState.syntheticFulfill = true;\r\n      viewport.scrollPosition = position;\r\n      scroller.logger.stat('after scroll adjustment' + diffLog);\r\n      done();\r\n    });\r\n  }\r\n\r\n}\r\n"]}