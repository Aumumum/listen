import { BaseAdapterProcessFactory, AdapterProcess, ProcessStatus } from '../misc/index';
export default class Reload extends BaseAdapterProcessFactory(AdapterProcess.reload) {
  static run(scroller, reloadIndex) {
    const { viewport, state, buffer } = scroller;
    const { params } = Reload.parseInput(scroller, { reloadIndex }, true);
    buffer.reset(false, params ? params.reloadIndex : void 0);
    viewport.reset(buffer.startIndex);
    const payload = {};
    if (state.cycle.busy.get()) {
      state.scrollState.cleanupTimers();
      payload.finalize = true;
      state.cycle.interrupter = Reload.process;
    }
    scroller.workflow.call({
      process: Reload.process,
      status: ProcessStatus.next,
      payload
    });
  }
}
//# sourceMappingURL=reload.js.map