import { __extends } from "tslib";
import { AdapterContext } from './adapter/context';
import { reactiveConfigStorage } from './adapter/props';
var DatasourceGeneric = /** @class */ (function () {
  function DatasourceGeneric(datasource, config) {
    this.get = datasource.get;
    if (datasource.settings) {
      this.settings = datasource.settings;
    }
    if (datasource.devSettings) {
      this.devSettings = datasource.devSettings;
    }
    var adapterContext = new AdapterContext(config || { mock: false });
    this.adapter = adapterContext;
  }
  DatasourceGeneric.prototype.dispose = function () {
    reactiveConfigStorage.delete(this.adapter.id);
  };
  return DatasourceGeneric;
}());
export { DatasourceGeneric };
// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
export var makeDatasource = function (getConfig) {
  return /** @class */ (function (_super) {
    __extends(class_1, _super);
    function class_1(datasource) {
      var _this = this;
      var config = typeof getConfig === 'function' ? getConfig() : void 0;
      _this = _super.call(this, datasource, config) || this;
      return _this;
    }
    return class_1;
  }(DatasourceGeneric));
};
export var Datasource = makeDatasource();
//# sourceMappingURL=datasource.js.map