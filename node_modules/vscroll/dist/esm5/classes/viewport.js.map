{"version":3,"file":"viewport.js","sourceRoot":"","sources":["../../../src/classes/viewport.ts"],"names":[],"mappings":"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","sourcesContent":["import { Paddings } from './paddings';\nimport { Settings } from './settings';\nimport { Routines } from './domRoutines';\nimport { Item } from './item';\nimport { State } from './state';\nimport { Logger } from './logger';\nimport { Direction } from '../inputs/index';\n\nexport class Viewport {\n\n  offset: number;\n  paddings: Paddings;\n\n  readonly element: HTMLElement;\n  readonly settings: Settings;\n  readonly routines: Routines;\n  readonly state: State;\n  readonly logger: Logger;\n\n  readonly hostElement: HTMLElement;\n  readonly scrollEventReceiver: HTMLElement | Window;\n\n  private disabled: boolean;\n\n  constructor(element: HTMLElement, settings: Settings, routines: Routines, state: State, logger: Logger) {\n    this.element = element;\n    this.settings = settings;\n    this.routines = routines;\n    this.state = state;\n    this.logger = logger;\n    this.disabled = false;\n\n    if (settings.windowViewport) {\n      this.hostElement = document.documentElement as HTMLElement;\n      this.scrollEventReceiver = window;\n    } else {\n      this.hostElement = settings.viewport || this.element.parentElement as HTMLElement;\n      this.scrollEventReceiver = this.hostElement;\n    }\n\n    this.paddings = new Paddings(this.element, this.routines, settings);\n\n    if (settings.windowViewport && 'scrollRestoration' in history) {\n      history.scrollRestoration = 'manual';\n    }\n\n    if (settings.dismissOverflowAnchor) {\n      this.hostElement.style.overflowAnchor = 'none';\n    }\n  }\n\n  reset(startIndex: number): void {\n    this.setOffset();\n    this.paddings.reset(this.getSize(), startIndex, this.offset);\n    this.scrollPosition = this.paddings.backward.size || 0;\n    this.state.scrollState.reset();\n  }\n\n  setPosition(value: number): number {\n    const oldPosition = this.scrollPosition;\n    if (oldPosition === value) {\n      this.logger.log(() => ['setting scroll position at', value, '[cancelled]']);\n      return value;\n    }\n    this.routines.setScrollPosition(this.hostElement, value);\n    const position = this.scrollPosition;\n    this.logger.log(() => [\n      'setting scroll position at', position, ...(position !== value ? [`(${value})`] : [])\n    ]);\n    return position;\n  }\n\n  get scrollPosition(): number {\n    return this.routines.getScrollPosition(this.hostElement);\n  }\n\n  set scrollPosition(value: number) {\n    this.setPosition(value);\n  }\n\n  disableScrollForOneLoop(): void {\n    if (this.disabled) {\n      return;\n    }\n    const { style } = this.hostElement;\n    if (style.overflowY === 'hidden') {\n      return;\n    }\n    this.disabled = true;\n    const overflow = style.overflowY;\n    setTimeout(() => {\n      this.disabled = false;\n      style.overflowY = overflow;\n    });\n    style.overflowY = 'hidden';\n  }\n\n  getSize(): number {\n    return this.routines.getSize(this.hostElement, true);\n  }\n\n  getScrollableSize(): number {\n    return this.routines.getSize(this.element);\n  }\n\n  getBufferPadding(): number {\n    return this.getSize() * this.settings.padding;\n  }\n\n  getEdge(direction: Direction): number {\n    return this.routines.getEdge(this.hostElement, direction, true);\n  }\n\n  setOffset(): void {\n    this.offset = this.routines.getOffset(this.element);\n    if (!this.settings.windowViewport) {\n      this.offset -= this.routines.getOffset(this.hostElement);\n    }\n  }\n\n  getEdgeVisibleItem(items: Item[], direction: Direction): { item?: Item, index: number, diff: number } {\n    const bwd = direction === Direction.backward;\n    const opposite = bwd ? Direction.forward : Direction.backward;\n    const viewportEdge = this.getEdge(direction);\n    let item, diff = 0;\n    for (\n      let i = bwd ? 0 : items.length - 1;\n      bwd ? i <= items.length - 1 : i >= 0;\n      i += bwd ? 1 : -1\n    ) {\n      const itemEdge = this.routines.getEdge(items[i].element, opposite);\n      diff = itemEdge - viewportEdge;\n      if (bwd && diff > 0 || !bwd && diff < 0) {\n        item = items[i];\n        break;\n      }\n    }\n    return { item, index: item ? item.$index : NaN, diff };\n  }\n\n}\n"]}