{"version":3,"file":"cycle.js","sourceRoot":"","sources":["../../../../src/classes/state/cycle.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAEvC;IAUE,wBAAY,KAAa;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,QAAQ,CAAU,KAAK,CAAC,CAAC;IAC3C,CAAC;IARD,sBAAI,iCAAK;aAAT;YACE,OAAO,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC;QAC1B,CAAC;;;OAAA;IAQD,6BAAI,GAAJ;QACE,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IAED,8BAAK,GAAL;QACE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IAED,gCAAO,GAAP;QACE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IACtB,CAAC;IACH,qBAAC;AAAD,CAAC,AA7BD,IA6BC;AAED;IAiBE,4BAAY,aAAqB,EAAE,KAA0B;QAC3D,IAAM,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,IAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAEpD,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,IAAI,cAAc,CAAC,SAAS,CAAC,CAAC;QAC/C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,IAAI,QAAQ,CAAU,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACxB,CAAC;IAjBD,sBAAI,sCAAM;aAAV;YACE,OAAU,IAAI,CAAC,aAAa,SAAI,IAAI,CAAC,KAAK,SAAI,IAAI,CAAC,SAAS,CAAC,KAAO,CAAC;QACvE,CAAC;;;OAAA;IAED,sBAAI,0CAAU;aAAd;YACE,OAAU,IAAI,CAAC,aAAa,SAAI,IAAI,CAAC,KAAK,UAAI,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAE,CAAC;QAC3E,CAAC;;;OAAA;IAaD,iCAAI,GAAJ,UAAK,KAAa;QAChB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IAED,kCAAK,GAAL,UAAM,SAAkB,EAAE,SAAsB;QAC9C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IAED,oCAAO,GAAP,UAAQ,OAAiB;QACvB,IAAI,OAAO,EAAE;YACX,gEAAgE;YAChE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;SACrB;QACD,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IACH,yBAAC;AAAD,CAAC,AAlDD,IAkDC","sourcesContent":["import { ProcessName } from '../../interfaces/index';\nimport { Reactive } from '../reactive';\n\nclass InnerLoopModel {\n  total: number;\n  count: number;\n  isInitial: boolean;\n  busy: Reactive<boolean>;\n\n  get first(): boolean {\n    return this.count === 0;\n  }\n\n  constructor(total: number) {\n    this.total = total;\n    this.isInitial = false;\n    this.busy = new Reactive<boolean>(false);\n  }\n\n  done() {\n    this.count++;\n    this.total++;\n    this.busy.set(false);\n  }\n\n  start() {\n    this.busy.set(true);\n  }\n\n  dispose() {\n    this.busy.dispose();\n  }\n}\n\nexport class WorkflowCycleModel {\n  instanceIndex: number;\n  count: number;\n  isInitial: boolean;\n  initiator: ProcessName;\n  innerLoop: InnerLoopModel;\n  interrupter: ProcessName | null;\n  busy: Reactive<boolean>;\n\n  get loopId(): string {\n    return `${this.instanceIndex}-${this.count}-${this.innerLoop.total}`;\n  }\n\n  get loopIdNext(): string {\n    return `${this.instanceIndex}-${this.count}-${this.innerLoop.total + 1}`;\n  }\n\n  constructor(instanceIndex: number, cycle?: WorkflowCycleModel) {\n    const cycleCount = cycle ? cycle.count : 1;\n    const loopCount = cycle ? cycle.innerLoop.count : 0;\n\n    this.instanceIndex = instanceIndex;\n    this.innerLoop = new InnerLoopModel(loopCount);\n    this.interrupter = null;\n    this.busy = new Reactive<boolean>(false);\n    this.done(cycleCount);\n  }\n\n  done(count: number): void {\n    this.count = count;\n    this.isInitial = false;\n    this.busy.set(false);\n  }\n\n  start(isInitial: boolean, initiator: ProcessName): void {\n    this.isInitial = isInitial;\n    this.initiator = initiator;\n    this.innerLoop.isInitial = isInitial;\n    this.innerLoop.count = 0;\n    this.interrupter = null;\n    this.busy.set(true);\n  }\n\n  dispose(forever?: boolean): void {\n    if (forever) {\n      // otherwise the value will be persisted during re-instantiation\n      this.busy.dispose();\n    }\n    this.innerLoop.dispose();\n  }\n}\n"]}