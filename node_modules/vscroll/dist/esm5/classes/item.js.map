{"version":3,"file":"item.js","sourceRoot":"","sources":["../../../src/classes/item.ts"],"names":[],"mappings":"AAIA;IAgCE,cAAY,MAAc,EAAE,IAAU,EAAE,QAAkB;QACxD,IAAI,CAAC,SAAS,GAAG;YACf,MAAM,QAAA;YACN,IAAI,MAAA;SACL,CAAC;QACF,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IA/BD,sBAAI,wBAAM;aAAV;YACE,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;QAC/B,CAAC;aACD,UAAW,KAAa;YACtB,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,KAAK,CAAC;QAChC,CAAC;;;OAHA;IAKD,sBAAI,sBAAI;aAAR;YACE,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QAC7B,CAAC;aACD,UAAS,KAAW;YAClB,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC;QAC9B,CAAC;;;OAHA;IAKD,sBAAI,yBAAO;aAAX;YACE,OAAO,IAAI,CAAC,SAAS,CAAC,OAAsB,CAAC;QAC/C,CAAC;aACD,UAAY,KAAkB;YAC5B,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC;QACjC,CAAC;;;OAHA;IAiBD,sBAAO,GAAP;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;IAChC,CAAC;IAED,sBAAO,GAAP;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAClD,CAAC;IAED,mBAAI,GAAJ;QACE,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACzC;IACH,CAAC;IAED,uBAAQ,GAAR,UAAS,QAA0C;QACjD,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;SAChD;IACH,CAAC;IAED,0BAAW,GAAX,UAAY,KAAa;QACvB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED,kBAAG,GAAH;QACE,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IACH,WAAC;AAAD,CAAC,AAxED,IAwEC","sourcesContent":["import { Routines } from './domRoutines';\nimport { Direction } from '../inputs/index';\nimport { Item as _Item, ItemAdapter } from '../interfaces/index';\n\nexport class Item<Data = unknown> implements _Item<Data> {\n  nodeId: string;\n  routines: Routines;\n  size: number;\n  invisible: boolean;\n  toRemove: boolean;\n  toInsert: boolean;\n  removeDirection: Direction;\n\n  private container: ItemAdapter<Data>;\n\n  get $index(): number {\n    return this.container.$index;\n  }\n  set $index(value: number) {\n    this.container.$index = value;\n  }\n\n  get data(): Data {\n    return this.container.data;\n  }\n  set data(value: Data) {\n    this.container.data = value;\n  }\n\n  get element(): HTMLElement {\n    return this.container.element as HTMLElement;\n  }\n  set element(value: HTMLElement) {\n    this.container.element = value;\n  }\n\n  constructor($index: number, data: Data, routines: Routines) {\n    this.container = {\n      $index,\n      data\n    };\n    this.nodeId = String($index);\n    this.routines = routines;\n    this.invisible = true;\n    this.toRemove = false;\n    this.toInsert = false;\n  }\n\n  dispose(): void {\n    delete this.container.element;\n  }\n\n  setSize(): void {\n    this.size = this.routines.getSize(this.element);\n  }\n\n  hide(): void {\n    if (this.element) {\n      this.routines.hideElement(this.element);\n    }\n  }\n\n  scrollTo(argument?: boolean | ScrollIntoViewOptions): void {\n    if (this.element) {\n      this.routines.scrollTo(this.element, argument);\n    }\n  }\n\n  updateIndex(index: number): void {\n    this.$index = index;\n    this.nodeId = String(index);\n  }\n\n  get(): ItemAdapter<Data> {\n    return this.container;\n  }\n}\n"]}