{"version":3,"file":"validation.js","sourceRoot":"","sources":["../../../src/inputs/validation.ts"],"names":[],"mappings":"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","sourcesContent":["import { IValidationContext } from '../interfaces/validation';\nimport {\n  IValidator,\n  ValidatedValue,\n  IValidatedData,\n  IValidatedCommonProps,\n  ICommonProps,\n  ICommonProp,\n} from '../interfaces/index';\n\nexport enum ValidatorType {\n  number = 'must be a number',\n  integer = 'must be an integer',\n  integerUnlimited = 'must be an integer or infinity',\n  moreOrEqual = 'must be a number greater than (or equal to) {arg1}',\n  itemList = 'must be an array of items {arg1}',\n  boolean = 'must be a boolean',\n  object = 'must be an object',\n  element = 'must be an html element',\n  function = 'must be a function',\n  funcOfxArguments = 'must have {arg1} argument(s)',\n  funcOfxAndMoreArguments = 'must have at least {arg1} argument(s)',\n  funcOfXToYArguments = 'must have {arg1} to {arg2} arguments',\n  oneOfCan = 'can be present as only one item of {arg1} list',\n  oneOfMust = 'must be present as only one item of {arg1} list',\n  or = 'must satisfy at least 1 validator from {arg1} list',\n  enum = 'must belong to {arg1} list',\n}\n\nconst getError = (msg: ValidatorType, args?: string[]) =>\n  (args || ['']).reduce((acc, arg, index) => acc.replace(`{arg${index + 1}}`, arg), msg);\n\nconst getNumber = (value: unknown): number =>\n  typeof value === 'number' || (typeof value === 'string' && value !== '')\n    ? Number(value)\n    : NaN;\n\nconst onNumber = (value: unknown): ValidatedValue => {\n  const parsedValue = getNumber(value);\n  const errors = [];\n  if (Number.isNaN(parsedValue)) {\n    errors.push(ValidatorType.number);\n  }\n  return { value: parsedValue, isSet: true, isValid: !errors.length, errors };\n};\n\nconst onInteger = (value: unknown): ValidatedValue => {\n  const errors = [];\n  value = getNumber(value);\n  const parsedValue = parseInt(String(value), 10);\n  if (value !== parsedValue) {\n    errors.push(ValidatorType.integer);\n  }\n  return { value: parsedValue, isSet: true, isValid: !errors.length, errors };\n};\n\nconst onIntegerUnlimited = (value: unknown): ValidatedValue => {\n  let parsedValue = value;\n  const errors = [];\n  value = getNumber(value);\n  if (!Number.isFinite(value)) {\n    parsedValue = value;\n  } else {\n    parsedValue = parseInt(String(value), 10);\n  }\n  if (value !== parsedValue) {\n    errors.push(ValidatorType.integerUnlimited);\n  }\n  return { value: parsedValue, isSet: true, isValid: !errors.length, errors };\n};\n\nconst onMoreOrEqual = (limit: number, fallback?: boolean) => (value: unknown): ValidatedValue => {\n  const result = onNumber(value);\n  if (!result.isValid) {\n    return result;\n  }\n  let parsedValue = result.value as number;\n  const errors = [];\n  if (parsedValue < limit) {\n    if (!fallback) {\n      errors.push(getError(ValidatorType.moreOrEqual, [String(limit)]));\n    } else {\n      parsedValue = limit;\n    }\n  }\n  return { value: parsedValue, isSet: true, isValid: !errors.length, errors };\n};\n\nconst onBoolean = (value: unknown): ValidatedValue => {\n  const errors = [];\n  let parsedValue = value;\n  if (value === 'true') {\n    parsedValue = true;\n  } else if (value === 'false') {\n    parsedValue = false;\n  }\n  if (typeof parsedValue !== 'boolean') {\n    errors.push(ValidatorType.boolean);\n  }\n  return { value: parsedValue, isSet: true, isValid: !errors.length, errors };\n};\n\nconst onObject = (value: unknown): ValidatedValue => {\n  const errors = [];\n  if (Object.prototype.toString.call(value) !== '[object Object]') {\n    errors.push(ValidatorType.object);\n  }\n  return { value, isSet: true, isValid: !errors.length, errors };\n};\n\nconst onHtmlElement = (value: unknown): ValidatedValue => {\n  const errors = [];\n  if (!(value instanceof Element) && !(value instanceof HTMLDocument)) {\n    errors.push(ValidatorType.element);\n  }\n  return { value, isSet: true, isValid: !errors.length, errors };\n};\n\nconst onItemList = (value: unknown): ValidatedValue => {\n  let parsedValue = value;\n  const errors = [];\n  if (!Array.isArray(value)) {\n    errors.push(ValidatorType.itemList);\n    parsedValue = [];\n  } else if (!value.length) {\n    errors.push(getError(ValidatorType.itemList, ['with at least 1 item']));\n  } else if (value.length > 1) {\n    const type = typeof value[0];\n    if (value.some((v: unknown) => typeof v !== type)) {\n      errors.push(getError(ValidatorType.itemList, ['of items of the same type']));\n    }\n  }\n  return { value: parsedValue as unknown[], isSet: true, isValid: !errors.length, errors };\n};\n\ntype Func = (...args: any[]) => void;\n\nconst onFunction = (value: unknown): ValidatedValue => {\n  const errors = [];\n  if (typeof value !== 'function') {\n    errors.push(ValidatorType.function);\n  }\n  return { value: value as Func, isSet: true, isValid: !errors.length, errors };\n};\n\nconst onFunctionWithXArguments = (argsCount: number) => (value: unknown) => {\n  const result = onFunction(value);\n  if (!result.isValid) {\n    return result;\n  }\n  value = result.value;\n  const errors = [];\n  if ((value as Func).length !== argsCount) {\n    errors.push(getError(ValidatorType.funcOfxArguments, [String(argsCount)]));\n  }\n  return { value: value as Func, isSet: true, isValid: !errors.length, errors };\n};\n\nconst onFunctionWithXAndMoreArguments = (argsCount: number) => (value: unknown): ValidatedValue => {\n  const result = onFunction(value);\n  if (!result.isValid) {\n    return result;\n  }\n  value = result.value;\n  const errors = [];\n  if ((value as Func).length < argsCount) {\n    errors.push(getError(ValidatorType.funcOfxArguments, [String(argsCount)]));\n  }\n  return { value: value as Func, isSet: true, isValid: !errors.length, errors };\n};\n\nconst onFunctionWithXToYArguments = (from: number, to: number) => (value: unknown): ValidatedValue => {\n  const result = onFunction(value);\n  if (!result.isValid) {\n    return result;\n  }\n  value = result.value;\n  const errors = [];\n  if ((value as Func).length < from || (value as Func).length > to) {\n    errors.push(getError(ValidatorType.funcOfXToYArguments, [String(from), String(to)]));\n  }\n  return { value: value as Func, isSet: true, isValid: !errors.length, errors };\n};\n\nconst onOneOf = (tokens: string[], must: boolean) => (value: unknown, context?: IValidationContext): ValidatedValue => {\n  const errors = [];\n  const isSet = value !== void 0;\n  let noOneIsPresent = !isSet;\n  const err = must ? ValidatorType.oneOfMust : ValidatorType.oneOfCan;\n  if (!Array.isArray(tokens) || !tokens.length) {\n    errors.push(getError(err, ['undefined']));\n  } else {\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      const token = tokens[i];\n      if (typeof token !== 'string') {\n        errors.push(getError(err, [tokens.join('\", \"')]) + ' (non-string token)');\n        break;\n      }\n      const isAnotherPresent = context && Object.prototype.hasOwnProperty.call(context, token);\n      if (isSet && isAnotherPresent) {\n        errors.push(getError(err, [tokens.join('\", \"')]) + ` (${token} is present)`);\n        break;\n      }\n      if (noOneIsPresent && isAnotherPresent) {\n        noOneIsPresent = false;\n      }\n    }\n    if (must && noOneIsPresent) {\n      errors.push(getError(err, [tokens.join('\", \"')]));\n    }\n  }\n  return { value, isSet, isValid: !errors.length, errors };\n};\n\nconst onOr = (validators: IValidator[]) => (value: unknown): ValidatedValue => {\n  const errors = [];\n  if (validators.every(validator => !validator.method(value).isValid)) {\n    errors.push(validators.map(v => v.type).join(' OR '));\n  }\n  return { value, isSet: true, isValid: !errors.length, errors };\n};\n\nenum AbstractEnum { }\ntype TEnum = typeof AbstractEnum;\n\nconst onEnum = (list: TEnum) => (value: unknown): ValidatedValue => {\n  const errors = [];\n  const values = Object.keys(list).filter(k => isNaN(Number(k))).map(k => list[k as unknown as number]);\n  if (!values.some(item => item === value)) {\n    errors.push(getError(ValidatorType.enum, ['[' + values.join(',') + ']']));\n  }\n  return { value, isSet: true, isValid: !errors.length, errors };\n};\n\nexport const VALIDATORS = {\n  NUMBER: {\n    type: ValidatorType.number,\n    method: onNumber\n  },\n  INTEGER: {\n    type: ValidatorType.integer,\n    method: onInteger\n  },\n  INTEGER_UNLIMITED: {\n    type: ValidatorType.integerUnlimited,\n    method: onIntegerUnlimited\n  },\n  MORE_OR_EQUAL: (limit: number, fallback?: boolean): IValidator => ({\n    type: ValidatorType.moreOrEqual,\n    method: onMoreOrEqual(limit, fallback)\n  }),\n  BOOLEAN: {\n    type: ValidatorType.boolean,\n    method: onBoolean\n  },\n  OBJECT: {\n    type: ValidatorType.object,\n    method: onObject\n  },\n  ITEM_LIST: {\n    type: ValidatorType.itemList,\n    method: onItemList\n  },\n  ELEMENT: {\n    type: ValidatorType.element,\n    method: onHtmlElement\n  },\n  FUNC: {\n    type: ValidatorType.function,\n    method: onFunction\n  },\n  FUNC_WITH_X_ARGUMENTS: (count: number): IValidator => ({\n    type: ValidatorType.funcOfxArguments,\n    method: onFunctionWithXArguments(count)\n  }),\n  FUNC_WITH_X_AND_MORE_ARGUMENTS: (count: number): IValidator => ({\n    type: ValidatorType.funcOfxAndMoreArguments,\n    method: onFunctionWithXAndMoreArguments(count)\n  }),\n  FUNC_WITH_X_TO_Y_ARGUMENTS: (from: number, to: number): IValidator => ({\n    type: ValidatorType.funcOfXToYArguments,\n    method: onFunctionWithXToYArguments(from, to)\n  }),\n  ONE_OF_CAN: (list: string[]): IValidator => ({\n    type: ValidatorType.oneOfCan,\n    method: onOneOf(list, false)\n  }),\n  ONE_OF_MUST: (list: string[]): IValidator => ({\n    type: ValidatorType.oneOfMust,\n    method: onOneOf(list, true)\n  }),\n  OR: (list: IValidator[]): IValidator => ({\n    type: ValidatorType.or,\n    method: onOr(list)\n  }),\n  ENUM: (list: TEnum): IValidator => ({\n    type: ValidatorType.enum,\n    method: onEnum(list)\n  })\n};\n\nexport class ValidatedData implements IValidatedData {\n\n  context: IValidationContext;\n  isValidContext: boolean;\n  isValid: boolean;\n  errors: string[];\n  params: IValidatedCommonProps<PropertyKey>;\n\n  private contextErrors: string[];\n\n  constructor(context: unknown) {\n    this.params = {};\n    this.contextErrors = [];\n    this.errors = [];\n    this.isValid = true;\n    this.setContext(context);\n  }\n\n  private setContext(context: unknown): void {\n    if (!context || Object.prototype.toString.call(context) !== '[object Object]') {\n      this.setCommonError('context is not an object');\n      this.isValidContext = false;\n    } else {\n      this.isValidContext = true;\n    }\n    this.context = context as IValidationContext;\n  }\n\n  private setValidity() {\n    this.errors = Object.keys(this.params).reduce((acc: string[], key: string) => [\n      ...acc, ...this.params[key].errors\n    ], []);\n    this.isValid = !this.errors.length;\n  }\n\n  setCommonError(error: string): void {\n    this.contextErrors.push(error);\n    this.errors.push(error);\n    this.isValid = false;\n  }\n\n  setParam(token: string, value: ValidatedValue): void {\n    if (!value.isValid) {\n      value.errors = !value.isSet\n        ? [`\"${token}\" must be set`]\n        : value.errors.map((err: string) =>\n          `\"${token}\" ${err}`\n        );\n    }\n    this.params[token] = value;\n    this.setValidity();\n  }\n\n  showErrors(): string {\n    return this.errors.length\n      ? 'validation failed: ' + this.errors.join(', ')\n      : '';\n  }\n}\n\nexport const runValidator = (\n  current: ValidatedValue,\n  validator: IValidator,\n  context: IValidationContext\n): ValidatedValue => {\n  const { value, errors } = current;\n  const result = validator.method(value, context);\n  const _errors = [...errors, ...result.errors];\n  return {\n    value: result.value,\n    isSet: result.isSet,\n    isValid: !_errors.length,\n    errors: _errors\n  };\n};\n\nconst getDefault = (value: unknown, prop: ICommonProp): ValidatedValue => {\n  const empty = value === void 0;\n  const auto = !prop.mandatory && prop.defaultValue !== void 0;\n  return {\n    value: !empty ? value : (auto ? prop.defaultValue : void 0),\n    isSet: !empty || auto,\n    isValid: !empty || !prop.mandatory,\n    errors: []\n  };\n};\n\nexport const validateOne = (\n  context: IValidationContext, name: string, prop: ICommonProp\n): ValidatedValue => {\n  const result = getDefault(context[name], prop);\n  if (!result.isSet) {\n    const oneOfMust = prop.validators.find(v => v.type === ValidatorType.oneOfMust);\n    if (oneOfMust) {\n      return runValidator(result, oneOfMust, context);\n    }\n  } else {\n    for (const validator of Object.values(prop.validators)) {\n      const current = runValidator(result, validator, context);\n      if (!current.isValid && prop.defaultValue !== void 0) {\n        return {\n          value: prop.defaultValue,\n          isSet: true,\n          isValid: true,\n          errors: []\n        };\n      }\n      Object.assign(result, current);\n    }\n  }\n  return result;\n};\n\nexport const validate = (\n  context: unknown, params: ICommonProps<PropertyKey>\n): IValidatedData => {\n  const data = new ValidatedData(context);\n  Object.entries(params).forEach(([key, prop]) =>\n    data.setParam(key, data.isValidContext\n      ? validateOne(data.context, key, prop)\n      : getDefault(void 0, prop)\n    )\n  );\n  return data;\n};\n"]}