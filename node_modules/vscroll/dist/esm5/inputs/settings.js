var _a, _b, _c;
import { VALIDATORS } from './validation';
import { SizeStrategy } from './common';
var NUMBER = VALIDATORS.NUMBER, INTEGER = VALIDATORS.INTEGER, INTEGER_UNLIMITED = VALIDATORS.INTEGER_UNLIMITED, MORE_OR_EQUAL = VALIDATORS.MORE_OR_EQUAL, BOOLEAN = VALIDATORS.BOOLEAN, ELEMENT = VALIDATORS.ELEMENT, FUNC = VALIDATORS.FUNC, OR = VALIDATORS.OR, ENUM = VALIDATORS.ENUM;
var Settings;
(function (Settings) {
  Settings["adapter"] = "adapter";
  Settings["startIndex"] = "startIndex";
  Settings["minIndex"] = "minIndex";
  Settings["maxIndex"] = "maxIndex";
  Settings["itemSize"] = "itemSize";
  Settings["bufferSize"] = "bufferSize";
  Settings["padding"] = "padding";
  Settings["infinite"] = "infinite";
  Settings["horizontal"] = "horizontal";
  Settings["windowViewport"] = "windowViewport";
  Settings["viewportElement"] = "viewportElement";
  Settings["inverse"] = "inverse";
  Settings["onBeforeClip"] = "onBeforeClip";
  Settings["sizeStrategy"] = "sizeStrategy";
})(Settings || (Settings = {}));
var DevSettings;
(function (DevSettings) {
  DevSettings["debug"] = "debug";
  DevSettings["immediateLog"] = "immediateLog";
  DevSettings["logProcessRun"] = "logProcessRun";
  DevSettings["logTime"] = "logTime";
  DevSettings["throttle"] = "throttle";
  DevSettings["initDelay"] = "initDelay";
  DevSettings["initWindowDelay"] = "initWindowDelay";
  DevSettings["cacheData"] = "cacheData";
  DevSettings["cacheOnReload"] = "cacheOnReload";
  DevSettings["changeOverflow"] = "changeOverflow";
  DevSettings["dismissOverflowAnchor"] = "dismissOverflowAnchor";
})(DevSettings || (DevSettings = {}));
export var MIN = (_a = {},
  _a[Settings.itemSize] = 1,
  _a[Settings.bufferSize] = 1,
  _a[Settings.padding] = 0.01,
  _a[DevSettings.throttle] = 0,
  _a[DevSettings.initDelay] = 0,
  _a[DevSettings.initWindowDelay] = 0,
  _a);
export var SETTINGS = (_b = {},
  _b[Settings.adapter] = {
    validators: [BOOLEAN],
    defaultValue: false
  },
  _b[Settings.startIndex] = {
    validators: [INTEGER],
    defaultValue: 1
  },
  _b[Settings.minIndex] = {
    validators: [INTEGER_UNLIMITED],
    defaultValue: -Infinity
  },
  _b[Settings.maxIndex] = {
    validators: [INTEGER_UNLIMITED],
    defaultValue: Infinity
  },
  _b[Settings.itemSize] = {
    validators: [INTEGER, MORE_OR_EQUAL(MIN[Settings.itemSize], true)],
    defaultValue: NaN
  },
  _b[Settings.bufferSize] = {
    validators: [INTEGER, MORE_OR_EQUAL(MIN[Settings.bufferSize], true)],
    defaultValue: 5
  },
  _b[Settings.padding] = {
    validators: [NUMBER, MORE_OR_EQUAL(MIN[Settings.padding], true)],
    defaultValue: 0.5
  },
  _b[Settings.infinite] = {
    validators: [BOOLEAN],
    defaultValue: false
  },
  _b[Settings.horizontal] = {
    validators: [BOOLEAN],
    defaultValue: false
  },
  _b[Settings.windowViewport] = {
    validators: [BOOLEAN],
    defaultValue: false
  },
  _b[Settings.viewportElement] = {
    validators: [OR([ELEMENT, FUNC])],
    defaultValue: null
  },
  _b[Settings.inverse] = {
    validators: [BOOLEAN],
    defaultValue: false
  },
  _b[Settings.onBeforeClip] = {
    validators: [FUNC],
    defaultValue: null
  },
  _b[Settings.sizeStrategy] = {
    validators: [ENUM(SizeStrategy)],
    defaultValue: SizeStrategy.Average
  },
  _b);
export var DEV_SETTINGS = (_c = {},
  _c[DevSettings.debug] = {
    validators: [BOOLEAN],
    defaultValue: false
  },
  _c[DevSettings.immediateLog] = {
    validators: [BOOLEAN],
    defaultValue: true
  },
  _c[DevSettings.logProcessRun] = {
    validators: [BOOLEAN],
    defaultValue: false
  },
  _c[DevSettings.logTime] = {
    validators: [BOOLEAN],
    defaultValue: false
  },
  _c[DevSettings.throttle] = {
    validators: [INTEGER, MORE_OR_EQUAL(MIN[DevSettings.throttle], true)],
    defaultValue: 40
  },
  _c[DevSettings.initDelay] = {
    validators: [INTEGER, MORE_OR_EQUAL(MIN[DevSettings.initDelay], true)],
    defaultValue: 1
  },
  _c[DevSettings.initWindowDelay] = {
    validators: [INTEGER, MORE_OR_EQUAL(MIN[DevSettings.initWindowDelay], true)],
    defaultValue: 40
  },
  _c[DevSettings.cacheData] = {
    validators: [BOOLEAN],
    defaultValue: false
  },
  _c[DevSettings.cacheOnReload] = {
    validators: [BOOLEAN],
    defaultValue: false
  },
  _c[DevSettings.changeOverflow] = {
    validators: [BOOLEAN],
    defaultValue: false
  },
  _c[DevSettings.dismissOverflowAnchor] = {
    validators: [BOOLEAN],
    defaultValue: true
  },
  _c);
//# sourceMappingURL=settings.js.map