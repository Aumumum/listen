import { __extends } from "tslib";
import { BaseProcessFactory, CommonProcess, AdapterProcess, ProcessStatus } from './misc/index';
var initProcesses = [CommonProcess.init, AdapterProcess.reset, AdapterProcess.reload];
var Init = /** @class */ (function (_super) {
  __extends(Init, _super);
  function Init() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Init.run = function (scroller, process) {
    var cycle = scroller.state.cycle, workflow = scroller.workflow;
    var isInitial = initProcesses.includes(process);
    scroller.logger.logCycle(true);
    cycle.start(isInitial, process);
    workflow.call({
      process: Init.process,
      status: ProcessStatus.next
    });
  };
  return Init;
}(BaseProcessFactory(CommonProcess.init)));
export default Init;
//# sourceMappingURL=init.js.map