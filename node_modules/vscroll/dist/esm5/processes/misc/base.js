import { __assign, __extends, __read } from "tslib";
import { ProcessStatus } from './enums';
import { ADAPTER_METHODS, validate } from '../../inputs/index';
export var BaseProcessFactory = function (process) { var _a; return _a = /** @class */ (function () {
    function BaseProcess() {
    }
    return BaseProcess;
  }()),
  _a.process = process,
  _a; };
export var BaseAdapterProcessFactory = function (process) { var _a; return _a = /** @class */ (function (_super) {
    __extends(BaseAdapterProcess, _super);
    function BaseAdapterProcess() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    BaseAdapterProcess.parseInput = function (scroller, options, ignoreErrors) {
      if (ignoreErrors === void 0) { ignoreErrors = false; }
      var result = {
        data: validate(options, ADAPTER_METHODS[process])
      };
      if (result.data.isValid) {
        result.params = Object.entries(result.data.params)
          .reduce(function (acc, _a) {
          var _b;
          var _c = __read(_a, 2), key = _c[0], value = _c[1].value;
          return (__assign(__assign({}, acc), (_b = {}, _b[key] = value, _b)));
        }, {});
      }
      else {
        scroller.logger.log(function () { return result.data.showErrors(); });
        if (!ignoreErrors) {
          scroller.workflow.call({
            process: process,
            status: ProcessStatus.error,
            payload: { error: "Wrong argument of the \"" + process + "\" method call" }
          });
        }
      }
      return result;
    };
    return BaseAdapterProcess;
  }(BaseProcessFactory(process))),
  _a.process = process,
  _a; };
//# sourceMappingURL=base.js.map