import { __extends, __read, __spreadArray } from "tslib";
import Update from './update';
import { BaseAdapterProcessFactory, AdapterProcess, ProcessStatus } from '../misc/index';
var Insert = /** @class */ (function (_super) {
  __extends(Insert, _super);
  function Insert() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Insert.run = function (scroller, options) {
    var params = Insert.parseInput(scroller, options).params;
    if (!params) {
      return;
    }
    var shouldInsert = Insert.doInsert(scroller, params);
    scroller.workflow.call({
      process: Insert.process,
      status: shouldInsert ? ProcessStatus.next : ProcessStatus.done
    });
  };
  Insert.doInsert = function (scroller, params) {
    var before = params.before, after = params.after, items = params.items, decrease = params.decrease;
    var method = (before || after);
    var found = scroller.buffer.items.find(function (item) { return method(item.get()); });
    if (!found) {
      scroller.logger.log('no item to insert found');
      return false;
    }
    var indexToInsert = found.$index;
    var updateOptions = {
      predicate: function (_a) {
        var $index = _a.$index, data = _a.data;
        if (indexToInsert === $index) {
          return before ? __spreadArray(__spreadArray([], __read(items)), [data]) : __spreadArray([data], __read(items));
        }
        return true;
      },
      fixRight: decrease
    };
    return Update.doUpdate(scroller, updateOptions);
  };
  return Insert;
}(BaseAdapterProcessFactory(AdapterProcess.insert)));
export default Insert;
//# sourceMappingURL=insert.js.map