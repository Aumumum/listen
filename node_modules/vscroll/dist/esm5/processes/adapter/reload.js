import { __extends } from "tslib";
import { BaseAdapterProcessFactory, AdapterProcess, ProcessStatus } from '../misc/index';
var Reload = /** @class */ (function (_super) {
  __extends(Reload, _super);
  function Reload() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Reload.run = function (scroller, reloadIndex) {
    var viewport = scroller.viewport, state = scroller.state, buffer = scroller.buffer;
    var params = Reload.parseInput(scroller, { reloadIndex: reloadIndex }, true).params;
    buffer.reset(false, params ? params.reloadIndex : void 0);
    viewport.reset(buffer.startIndex);
    var payload = {};
    if (state.cycle.busy.get()) {
      state.scrollState.cleanupTimers();
      payload.finalize = true;
      state.cycle.interrupter = Reload.process;
    }
    scroller.workflow.call({
      process: Reload.process,
      status: ProcessStatus.next,
      payload: payload
    });
  };
  return Reload;
}(BaseAdapterProcessFactory(AdapterProcess.reload)));
export default Reload;
//# sourceMappingURL=reload.js.map