import { Scroller } from '../../scroller';
import { AdapterRemoveOptions, ItemsPredicate } from '../../interfaces/index';
declare const Remove_base: import("../../interfaces/process").IBaseAdapterProcess;
export default class Remove extends Remove_base {
  static run(scroller: Scroller, options: AdapterRemoveOptions): void;
  static doRemove(scroller: Scroller, params: AdapterRemoveOptions, sequenceOnly?: boolean): boolean;
  static removeBufferedItems(scroller: Scroller, options: AdapterRemoveOptions): number[];
  static runPredicateOverBuffer(scroller: Scroller, predicate: ItemsPredicate, increase: boolean): number[];
  static removeVirtualItems(scroller: Scroller, params: AdapterRemoveOptions, sequenceOnly: boolean): boolean;
  static shiftFirstVisibleIndex({ state: { fetch } }: Scroller, listToRemove: number[], increase: boolean): void;
}
export {};
