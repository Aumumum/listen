import { Scroller } from '../../scroller';
import { AdapterProcess } from '../misc/index';
import { AdapterAppendOptions, AdapterPrependOptions } from '../../interfaces/index';
declare type AdapterAppendPrependOptions = AdapterAppendOptions & AdapterPrependOptions;
interface AppendRunOptions {
  process: AdapterProcess;
  options: AdapterAppendPrependOptions;
}
declare const Append_base: import("../../interfaces/process").IBaseAdapterProcess;
export default class Append extends Append_base {
  static run(scroller: Scroller, { process, options }: AppendRunOptions): void;
  static doVirtualize(scroller: Scroller, items: unknown[], prepend: boolean): void;
  static simulateFetch(scroller: Scroller, items: unknown[], eof: boolean, prepend: boolean): boolean;
}
export {};
