import { Scroller } from '../scroller';
interface Immediate {
  data: unknown[] | null;
  error: unknown | null;
  isError: boolean;
}
declare type FetchGetResult = Immediate | Promise<unknown>;
interface FetchBox {
  success: (value: unknown[]) => void;
  fail: (value: unknown) => void;
}
declare const Fetch_base: import("../interfaces/process").IBaseProcess;
export default class Fetch extends Fetch_base {
  static run(scroller: Scroller): void;
  static complete(scroller: Scroller, box: FetchBox, result: FetchGetResult): void;
  static get(scroller: Scroller): FetchGetResult;
}
export {};
