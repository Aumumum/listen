import { Settings } from './settings';
import { WorkflowCycleModel } from './state/cycle';
import { FetchModel } from './state/fetch';
import { ClipModel } from './state/clip';
import { RenderModel } from './state/render';
import { State as IState, IPackages, ScrollState as IScrollState, ProcessName } from '../interfaces/index';
export declare class State implements IState {
  readonly packageInfo: IPackages;
  private settings;
  initTime: number;
  cycle: WorkflowCycleModel;
  fetch: FetchModel;
  clip: ClipModel;
  render: RenderModel;
  scrollState: IScrollState;
  get time(): number;
  constructor(packageInfo: IPackages, settings: Settings, state?: IState);
  endInnerLoop(): void;
  startInnerLoop(): {
    process?: ProcessName;
    doRender?: boolean;
  };
  dispose(): void;
}
