import { Scroller } from '../scroller';
import { IPackages, ProcessSubject } from '../interfaces/index';
export declare class Logger {
  readonly debug: boolean;
  readonly immediateLog: boolean;
  readonly logTime: boolean;
  readonly getTime: () => string;
  readonly getStat: () => string;
  readonly getFetchRange: () => string;
  readonly getWorkflowCycleData: () => string;
  readonly getLoopId: () => string;
  readonly getLoopIdNext: () => string;
  readonly getScrollPosition: (element: HTMLElement) => number;
  private logs;
  constructor(scroller: Scroller, packageInfo: IPackages, adapter?: {
    id: number;
  });
  object(str: string, obj: unknown, stringify?: boolean): void;
  stat(str?: string): void;
  fetch(str?: string): void;
  prepareForLog(data: unknown): unknown;
  logProcess(data: ProcessSubject): void;
  logCycle(start?: boolean): void;
  logError(str: string): void;
  logAdapterMethod: (methodName: string, args?: unknown, add?: string | undefined) => void;
  log(...args: any[]): void;
  logForce(...args: unknown[]): void;
}
