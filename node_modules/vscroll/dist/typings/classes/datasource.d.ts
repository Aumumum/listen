import { IDatasource, IDatasourceConstructed, DatasourceGet, Settings, DevSettings, IAdapter, IAdapterConfig } from '../interfaces/index';
export declare class DatasourceGeneric<Data> implements IDatasourceConstructed<Data> {
  get: DatasourceGet<Data>;
  settings?: Settings<Data>;
  devSettings?: DevSettings;
  adapter: IAdapter<Data>;
  constructor(datasource: IDatasource<Data>, config?: IAdapterConfig);
  dispose(): void;
}
export declare const makeDatasource: (getConfig?: (() => IAdapterConfig) | undefined) => {
  new <Data = unknown>(datasource: IDatasource<Data>): {
    get: DatasourceGet<Data>;
    settings?: Settings<Data> | undefined;
    devSettings?: DevSettings | undefined;
    adapter: IAdapter<Data>;
    dispose(): void;
  };
};
export declare const Datasource: {
  new <Data = unknown>(datasource: IDatasource<Data>): {
    get: DatasourceGet<Data>;
    settings?: Settings<Data> | undefined;
    devSettings?: DevSettings | undefined;
    adapter: IAdapter<Data>;
    dispose(): void;
  };
};
