import { SizeStrategy } from '../inputs/index';
import { Settings as ISettings, DevSettings as IDevSettings, ICommonProps, ItemsProcessor } from '../interfaces/index';
export declare class Settings<Data = unknown> implements ISettings, IDevSettings {
  adapter: boolean;
  startIndex: number;
  minIndex: number;
  maxIndex: number;
  itemSize: number;
  bufferSize: number;
  padding: number;
  infinite: boolean;
  horizontal: boolean;
  windowViewport: boolean;
  viewportElement: HTMLElement | (() => void) | null;
  inverse: boolean;
  onBeforeClip: ItemsProcessor | null;
  sizeStrategy: SizeStrategy;
  debug: boolean;
  immediateLog: boolean;
  logTime: boolean;
  logProcessRun: boolean;
  throttle: number;
  initDelay: number;
  initWindowDelay: number;
  cacheData: boolean;
  cacheOnReload: boolean;
  changeOverflow: boolean;
  dismissOverflowAnchor: boolean;
  instanceIndex: number;
  initializeDelay: number;
  viewport: HTMLElement | null;
  constructor(settings: ISettings<Data> | undefined, devSettings: IDevSettings | undefined, instanceIndex: number);
  parseInput(input: ISettings<Data> | IDevSettings | undefined, props: ICommonProps<PropertyKey>): void;
  getInitializeDelay(): number;
  getViewport(): HTMLElement | null;
}
