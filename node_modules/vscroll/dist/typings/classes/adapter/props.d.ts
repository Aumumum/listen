import { IAdapterProp, ItemAdapter, AdapterMethodResult, IReactivePropsStore } from '../../interfaces/index';
export declare enum AdapterPropName {
  id = "id",
  mock = "mock",
  augmented = "augmented",
  version = "version",
  init = "init",
  init$ = "init$",
  packageInfo = "packageInfo",
  itemsCount = "itemsCount",
  bufferInfo = "bufferInfo",
  isLoading = "isLoading",
  isLoading$ = "isLoading$",
  loopPending = "loopPending",
  loopPending$ = "loopPending$",
  firstVisible = "firstVisible",
  firstVisible$ = "firstVisible$",
  lastVisible = "lastVisible",
  lastVisible$ = "lastVisible$",
  bof = "bof",
  bof$ = "bof$",
  eof = "eof",
  eof$ = "eof$",
  reset = "reset",
  reload = "reload",
  append = "append",
  prepend = "prepend",
  check = "check",
  remove = "remove",
  clip = "clip",
  insert = "insert",
  replace = "replace",
  update = "update",
  fix = "fix",
  relax = "relax",
  showLog = "showLog"
}
export declare enum AdapterPropType {
  Scalar = 0,
  Reactive = 1,
  WorkflowRunner = 2,
  Function = 3
}
export declare const methodPreResult: AdapterMethodResult;
export declare const EMPTY_ITEM: ItemAdapter<unknown>;
export declare const getDefaultAdapterProps: () => IAdapterProp[];
export declare const reactiveConfigStorage: Map<number, IReactivePropsStore>;
