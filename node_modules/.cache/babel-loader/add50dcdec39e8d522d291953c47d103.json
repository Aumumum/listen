{"remainingRequest":"C:\\Users\\Aum\\listen\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Aum\\listen\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Aum\\listen\\src\\api\\http.js","dependencies":[{"path":"C:\\Users\\Aum\\listen\\src\\api\\http.js","mtime":1631844426785},{"path":"C:\\Users\\Aum\\listen\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Aum\\listen\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Aum\\listen\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKY29uc3QgaW5zdGFuY2UgPSBheGlvcy5jcmVhdGUoewogIGJhc2VVUkw6ICJodHRwczovL211c2ljLWFwaS1raGFraS52ZXJjZWwuYXBwLyIKfSk7CmV4cG9ydCBmdW5jdGlvbiBnZXQodXJsLCBwYXJhbXMgPSB7fSkgewogIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHsKICAgIGluc3RhbmNlLmdldCh1cmwsIHsKICAgICAgcGFyYW1zOiBwYXJhbXMKICAgIH0pLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICByZXNvbHZlKHJlc3BvbnNlKTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICBpZiAoZXJyb3IucmVzcG9uc2UpIHsKICAgICAgICAvLyDor7fmsYLmiJDlip/lj5Hlh7rkuJTmnI3liqHlmajkuZ/lk43lupTkuobnirbmgIHnoIHvvIzkvYbnirbmgIHku6PnoIHotoXlh7rkuoYgMnh4IOeahOiMg+WbtAogICAgICAgIGNvbnNvbGUubG9nKCdkYXRhJywgZXJyb3IucmVzcG9uc2UuZGF0YSk7CiAgICAgICAgY29uc29sZS5sb2coJ3N0YXR1cycsIGVycm9yLnJlc3BvbnNlLnN0YXR1cyk7CiAgICAgICAgY29uc29sZS5sb2coJ2hlYWRlcnMnLCBlcnJvci5yZXNwb25zZS5oZWFkZXJzKTsKICAgICAgfSBlbHNlIGlmIChlcnJvci5yZXF1ZXN0KSB7CiAgICAgICAgLy8g6K+35rGC5bey57uP5oiQ5Yqf5Y+R6LW377yM5L2G5rKh5pyJ5pS25Yiw5ZON5bqUCiAgICAgICAgLy8gYGVycm9yLnJlcXVlc3RgIOWcqOa1j+iniOWZqOS4reaYryBYTUxIdHRwUmVxdWVzdCDnmoTlrp7kvovvvIwKICAgICAgICAvLyDogIzlnKhub2RlLmpz5Lit5pivIGh0dHAuQ2xpZW50UmVxdWVzdCDnmoTlrp7kvosKICAgICAgICBjb25zb2xlLmxvZygn5pyq5ZON5bqUJywgZXJyb3IucmVxdWVzdCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy8g5Y+R6YCB6K+35rGC5pe25Ye65LqG54K56Zeu6aKYCiAgICAgICAgY29uc29sZS5sb2coJyMnLCBlcnJvci5tZXNzYWdlKTsKICAgICAgfQogICAgfSk7CiAgfSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIHBvc3QodXJsLCBkYXRhID0ge30pIHsKICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgaW5zdGFuY2UucG9zdCh1cmwsIGRhdGEpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICByZXNvbHZlKHJlc3BvbnNlKTsKICAgIH0sIGVyciA9PiB7CiAgICAgIHJlamVjdChlcnIpOwogICAgfSk7CiAgfSk7Cn0="},{"version":3,"sources":["C:/Users/Aum/listen/src/api/http.js"],"names":["axios","instance","create","baseURL","get","url","params","Promise","resolve","then","response","catch","error","console","log","data","status","headers","request","message","post","reject","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAE;AADmB,CAAb,CAAjB;AAKA,OAAQ,SAASC,GAAT,CAAaC,GAAb,EAAkBC,MAAM,GAAG,EAA3B,EAA+B;AAErC,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9BP,IAAAA,QAAQ,CACLG,GADH,CACOC,GADP,EACY;AACRC,MAAAA,MAAM,EAAEA;AADA,KADZ,EAIGG,IAJH,CAISC,QAAD,IAAc;AAClBF,MAAAA,OAAO,CAACE,QAAD,CAAP;AACD,KANH,EAOIC,KAPJ,CAOU,UAAUC,KAAV,EAAiB;AACvB,UAAIA,KAAK,CAACF,QAAV,EAAoB;AAClB;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBF,KAAK,CAACF,QAAN,CAAeK,IAAlC;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBF,KAAK,CAACF,QAAN,CAAeM,MAApC;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBF,KAAK,CAACF,QAAN,CAAeO,OAArC;AACD,OALD,MAKO,IAAIL,KAAK,CAACM,OAAV,EAAmB;AACxB;AACA;AACA;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBF,KAAK,CAACM,OAAxB;AACD,OALM,MAKA;AACL;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBF,KAAK,CAACO,OAAvB;AACD;AACF,KAtBH;AAuBD,GAxBM,CAAP;AAyBD;AACD,OAAO,SAASC,IAAT,CAAcf,GAAd,EAAmBU,IAAI,GAAG,EAA1B,EAA8B;AACnC,SAAO,IAAIR,OAAJ,CAAY,CAACC,OAAD,EAAUa,MAAV,KAAqB;AACtCpB,IAAAA,QAAQ,CAACmB,IAAT,CAAcf,GAAd,EAAmBU,IAAnB,EAAyBN,IAAzB,CACGC,QAAD,IAAc;AACZF,MAAAA,OAAO,CAACE,QAAD,CAAP;AACD,KAHH,EAIGY,GAAD,IAAS;AACPD,MAAAA,MAAM,CAACC,GAAD,CAAN;AACD,KANH;AAQD,GATM,CAAP;AAUD","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://music-api-khaki.vercel.app/\",\r\n  \r\n}\r\n);\r\nexport  function get(url, params = {}) {\r\n\r\n  return new Promise((resolve) => {\r\n    instance\r\n      .get(url, {\r\n        params: params,\r\n      })\r\n      .then((response) => {\r\n        resolve(response);\r\n      })\r\n       .catch(function (error) {\r\n        if (error.response) {\r\n          // 请求成功发出且服务器也响应了状态码，但状态代码超出了 2xx 的范围\r\n          console.log('data',error.response.data);\r\n          console.log('status',error.response.status);\r\n          console.log('headers',error.response.headers);\r\n        } else if (error.request) {\r\n          // 请求已经成功发起，但没有收到响应\r\n          // `error.request` 在浏览器中是 XMLHttpRequest 的实例，\r\n          // 而在node.js中是 http.ClientRequest 的实例\r\n          console.log('未响应',error.request);\r\n        } else {\r\n          // 发送请求时出了点问题\r\n          console.log('#', error.message);\r\n        }\r\n      }); \r\n  });\r\n}\r\nexport function post(url, data = {}) {\r\n  return new Promise((resolve, reject) => {\r\n    instance.post(url, data).then(\r\n      (response) => {\r\n        resolve(response);\r\n      },\r\n      (err) => {\r\n        reject(err);\r\n      }\r\n    );\r\n  });\r\n}\r\n"]}]}