{"remainingRequest":"C:\\Users\\Aum\\listen\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Aum\\listen\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Aum\\listen\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Aum\\listen\\src\\components\\player.vue?vue&type=template&id=1bcde71e&scoped=true&","dependencies":[{"path":"C:\\Users\\Aum\\listen\\src\\components\\player.vue","mtime":1631537244305},{"path":"C:\\Users\\Aum\\listen\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Aum\\listen\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Aum\\listen\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Aum\\listen\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}