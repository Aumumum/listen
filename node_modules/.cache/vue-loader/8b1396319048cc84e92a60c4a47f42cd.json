{"remainingRequest":"C:\\Users\\Aum\\listen\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Aum\\listen\\src\\components\\top_bar\\search.vue?vue&type=style&index=0&spoed=true&lang=css&","dependencies":[{"path":"C:\\Users\\Aum\\listen\\src\\components\\top_bar\\search.vue","mtime":1631032654984},{"path":"C:\\Users\\Aum\\listen\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Aum\\listen\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Aum\\listen\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Aum\\listen\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Aum\\listen\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZWwtYXV0b2NvbXBsZXRlIHsNCiAgbGluZS1oZWlnaHQ6IDYycHg7DQp9DQppbnB1dFt0eXBlPSJ0ZXh0Il0gew0KICBib3JkZXItcmFkaXVzOiAxLjVlbTsNCn0NCg=="},{"version":3,"sources":["search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;AACA;AACA;AACA;AACA;AACA","file":"search.vue","sourceRoot":"src/components/top_bar","sourcesContent":["<template>\r\n  <el-autocomplete\r\n    v-model=\"state\"\r\n    :fetch-suggestions=\"querySearchAsync\"\r\n    placeholder=\"请输入内容\"\r\n    @select=\"handleSelect\"\r\n  ></el-autocomplete>\r\n</template>\r\n\r\n<script>\r\nimport { getTyping } from \"../../api\";\r\nimport { mapActions } from \"vuex\";\r\nexport default {\r\n  name: \"search\",\r\n  data() {\r\n    return {\r\n      typeSuggest: [],\r\n      state: \"\",\r\n      timeout: 0,\r\n    };\r\n  },\r\n  watch: {\r\n    state: {\r\n      handler(newVal) {\r\n        if (newVal)\r\n          getTyping({ keywords: newVal }).then((response) => {\r\n            let arr = response.data.result.songs;\r\n            console.log(response.data);\r\n            this.typeSuggest = arr.map((item) => {\r\n              return Object.assign({\r\n                id: item.id,\r\n                title: item.name,\r\n                singer: item.artists[0].name,\r\n                duration: this.timeFormt(item.duration),\r\n                value: item.name + `（歌手: ${item.artists[0].name}）`,\r\n              });\r\n            });\r\n          });\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    timeFormt(value) {\r\n      value = Math.ceil(value / 1000);\r\n      let m = parseInt(value / 60);\r\n      let s = value % 60;\r\n      return m + \":\" + s;\r\n    },\r\n    ...mapActions(\"playerAbout\", [\"pushSong\"]),\r\n    querySearchAsync(queryString, cb) {\r\n      clearTimeout(this.timeout);\r\n      if (queryString) this.timeout = 10000 * Math.random();\r\n      else this.typeSuggest = [];\r\n      this.timeout = setTimeout(() => {\r\n        var result = this.typeSuggest;\r\n        cb(result);\r\n      }, this.timeout);\r\n    },\r\n\r\n    handleSelect(item) {\r\n      let obj = Object.assign({},{\r\n        id: item.id,\r\n        title: item.title,\r\n        singer: item.singer,\r\n        duration: item.duration,\r\n      });\r\n      this.pushSong(obj);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style spoed>\r\n.el-autocomplete {\r\n  line-height: 62px;\r\n}\r\ninput[type=\"text\"] {\r\n  border-radius: 1.5em;\r\n}\r\n</style>\r\n"]}]}